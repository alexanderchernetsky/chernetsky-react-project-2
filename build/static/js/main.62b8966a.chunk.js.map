{"version":3,"sources":["img/poster1.png","img/poster2.jpg","img/poster3.jpg","components/Form.js","components/Movies.js","components/SortForm.js","components/Pagination.js","App.js","components/Movie.js","components/NotFound.js","components/Slider.js","components/Welcome.js","components/Router.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Form","props","react_default","a","createElement","className","Link","to","onSubmit","findMovies","htmlFor","type","name","Movies","movies","map","movie","key","id","src","concat","poster_path","alt","original_title","release_date","vote_average","vote_count","overview","length","substr","pathname","SortForm","value","onClick","setSorting","defaultChecked","Pagination","_props$results","results","total_pages","page","Fragment","changePage","api_key","App","state","query","undefined","sorted","componentDidUpdate","_callee","prevProps","prevState","regenerator_default","wrap","_context","prev","next","match","params","_this","getResults","setTimeout","sortResults","stop","this","_callee2","_this$props$match$par","data","_data","_context2","JSON","parse","localStorage","getItem","setState","fetch","then","res","json","sent","setItem","stringify","_callee3","e","searchFieldValue","_context3","preventDefault","target","filmName","replace","history","push","_callee4","direction","_context4","currentTarget","Object","objectSpread","sort","first","second","split","join","_this$state$results","total_results","components_Form","components_Pagination","components_SortForm","components_Movies","Component","Movie","componentDidMount","movieId","title","tagline","runtime","original_language","genres","genre","index","production_companies","company","goBack","React","Slider","data-ride","data-interval","poster1","poster2","poster3","Welcome","goToSearchPage","components_Slider","Router","BrowserRouter","Switch","Route","exact","path","component","NotFound","Boolean","window","location","hostname","ReactDOM","render","components_Router","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.62b8966a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/poster1.d1424bdb.png\";","module.exports = __webpack_public_path__ + \"static/media/poster2.05b740ec.jpg\";","module.exports = __webpack_public_path__ + \"static/media/poster3.1ec0bd3a.jpg\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Form = (props) => {\r\n  return (\r\n      <header className=\"app-header\">\r\n        <div className=\"app-header__name-wrapper\">\r\n          <Link to='/' className=\"app-header__name mb-2 text-white text-decoration-none\">Movie Search</Link>\r\n        </div>\r\n        <form onSubmit={props.findMovies}>\r\n          <label htmlFor=\"filmName\">Type the name of the film: </label>\r\n          <input type=\"text\" name=\"filmName\"/>\r\n          <button type=\"submit\">Search</button>\r\n        </form>\r\n      </header>\r\n  )\r\n};\r\n\r\nForm.propTypes = {\r\n  findMovies: PropTypes.func,\r\n};\r\n\r\nexport default Form;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Movies = (props) => {\r\n  return (\r\n        <div className=\"card-deck mx-0 d-flex justify-content-around mt-2\">\r\n          {props.movies.map(movie => (\r\n          <div className=\"card mb-2\" key={movie.id}>\r\n            <img src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`} alt=\"poster\" className=\"card-img-top movie-card\"/>\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{movie.original_title}</h5>\r\n                <p className=\"card-title\">\r\n                  {movie.release_date}\r\n                  <span> Vote average: {movie.vote_average}</span>\r\n                  <span> Vote count: {movie.vote_count}</span>\r\n                </p>\r\n                <p className=\"card-text\">\r\n                  {movie.overview.length < 100 ? movie.overview : movie.overview.substr(0, 100)+ '...'}\r\n                </p>\r\n                <button className=\"btn btn-primary\">\r\n                  <Link to={{pathname: `/movie/${movie.id}`}} className=\"movie__link\">More</Link>\r\n                </button>\r\n              </div>\r\n          </div>\r\n          ))}\r\n        </div>\r\n  )\r\n};\r\n\r\nMovies.propTypes = {\r\n  movies: PropTypes.array,\r\n};\r\n\r\nexport default Movies;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SortForm = (props) => {\r\n  return (\r\n      <form className=\"pb-1 text-center\">\r\n        <span>Sort by: date</span><input type=\"radio\" name=\"sort\" value=\"date\" onClick={props.setSorting}/>\r\n        {' '}\r\n        <span>vote average</span><input type=\"radio\" name=\"sort\" value=\"vote_average\" onClick={props.setSorting}/>\r\n        {' '}\r\n        <span>no</span><input type=\"radio\" name=\"sort\" value=\"no\" defaultChecked onClick={props.setSorting}/>\r\n      </form>\r\n  )\r\n};\r\n\r\nSortForm.propTypes = {\r\n  setSorting: PropTypes.func,\r\n};\r\n\r\nexport default SortForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Pagination(props) {\r\n  const {total_pages, page} = props.results;\r\n  return (\r\n      <React.Fragment>\r\n        {page&&\r\n        <p className='pb-1 mb-0 text-center'>\r\n          {total_pages&&page !==1&&\r\n          <span onClick={() => props.changePage(-1)} className=\"badge badge-primary\">previous</span>}\r\n          Page: {page} from {total_pages}\r\n          {total_pages&&total_pages !==1&&(page !== total_pages)&&\r\n          <span onClick={() => props.changePage(1)} className=\"badge badge-primary\">next</span>}\r\n        </p>}\r\n      </React.Fragment>\r\n  )\r\n}\r\n\r\nPagination.propTypes = {\r\n  changePage: PropTypes.func,\r\n  results: PropTypes.shape({\r\n    total_pages: PropTypes.number,\r\n    page: PropTypes.number,\r\n  })\r\n};\r\n\r\nexport default Pagination;\r\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport Form from './components/Form';\nimport Movies from './components/Movies';\nimport SortForm from './components/SortForm';\nimport Pagination from './components/Pagination';\nimport './style.sass';\n\nconst api_key = 'eeb7c73b7cfc09ed59ca3805d5018bd0';\n\nclass App extends Component {\n  static propTypes = {\n    match: PropTypes.object,\n    history: PropTypes.object,\n  };\n\n  state = {\n    query: undefined,\n    page: undefined,\n    results: {},\n    sorted: 'no',\n  };\n\n  componentDidMount() {\n    this.getResults();\n  };\n\n  componentDidUpdate = async (prevProps, prevState) => {\n    if (prevProps.match.params.page !== this.props.match.params.page) {\n      this.getResults();\n      setTimeout(this.sortResults, 50); // to prevent bugs caused by asynchronous nature of setState\n    }\n    if(prevState.sorted !== this.state.sorted) {\n      this.sortResults();\n    }\n  };\n\n  getResults = async () => {\n    const {page, query} = this.props.match.params;\n\n    const data = JSON.parse(localStorage.getItem(`/search/${query}/${page}`));\n\n    if (data) {\n      this.setState({\n        query: query,\n        results: data,\n        page: page,\n      });\n    } else {\n      const data = await fetch(`https://api.themoviedb.org/3/search/movie?api_key=${api_key}&language=en-US&query=${query}&page=${page}&include_adult=false`)\n          .then(res => res.json());\n      this.setState({\n        query: query,\n        page: page,\n        results: data,\n      });\n      localStorage.setItem(`/search/${query}/${page}`, JSON.stringify(this.state.results));\n    }\n  };\n\n  findMovies = async (e) => {\n    e.preventDefault();\n    const searchFieldValue = e.target.filmName.value;\n    const query = searchFieldValue.replace(' ', '%20');\n    const data = await fetch(`https://api.themoviedb.org/3/search/movie?api_key=${api_key}&language=en-US&query=${query}&page=1&include_adult=false`)\n        .then(res => res.json());\n\n    const page = data.page;\n\n    this.setState({\n      query,\n      page,\n      results: data,\n    });\n\n    this.props.history.push(`/search/${query}/${page}`);\n\n    localStorage.setItem(`/search/${query}/${page}`, JSON.stringify(this.state.results));\n\n    setTimeout(this.sortResults, 50); // to prevent bugs caused by asynchronous nature of setState\n  };\n\n  changePage = async (direction) => {\n    const page = this.state.results.page + direction;\n    const query = this.state.query;\n\n    this.setState({\n      page,\n    });\n\n    this.props.history.push(`/search/${query}/${page}`);\n  };\n\n  setSorting = (e) => {\n    this.setState({sorted: e.currentTarget.value});\n  };\n\n  sortResults = () => {\n    const data = {...this.state.results};\n    let sorted;\n    if (this.state.sorted === 'vote_average') {\n      sorted = data.results.sort((first, second) => {\n        return second.vote_average - first.vote_average;\n      });\n      data.results = sorted;\n    }\n    if(this.state.sorted === 'no') {\n      sorted = data.results.sort((first, second) => {\n        return second.id - first.id;\n      });\n      data.results = sorted;\n    }\n    if(this.state.sorted === 'date') {\n      sorted = data.results.sort((first, second) => {\n        return second.release_date.split('-').join('') - first.release_date.split('-').join('');\n      });\n      data.results = sorted;\n    }\n    this.setState({results: data});\n  };\n\n  render() {\n    const {results, total_results} = this.state.results;\n    return (\n        <div>\n          <Form findMovies={this.findMovies}/>\n          <div className=\"container-fluid\">\n            <div className=\"row bg-secondary\">\n              <div className=\"col-12 col-md-3 col-xl-4\">\n                {total_results&&<p className='pb-1 mb-0 text-center'>Results found: {total_results}</p>}\n              </div>\n              <div className=\"col-12 col-md-3 col-xl-4\">\n                <Pagination results={this.state.results} changePage={this.changePage}/>\n              </div>\n              <div className=\"col-12 col-md-6 col-xl-4\">\n                <SortForm setSorting={this.setSorting}/>\n              </div>\n            </div>\n          </div>\n          {results&&<Movies movies={results}/>}\n        </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst api_key = 'eeb7c73b7cfc09ed59ca3805d5018bd0';\r\n\r\nclass Movie extends React.Component{\r\n  static propTypes = {\r\n    match: PropTypes.object,\r\n    history: PropTypes.object,\r\n  };\r\n\r\n  state = {\r\n    movie: undefined,\r\n  };\r\n\r\n  componentDidMount = async() => {\r\n    const movieId = this.props.match.params.movieId;\r\n    const data = await fetch(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${api_key}&language=en-US`)\r\n        .then(res => res.json());\r\n\r\n    this.setState({movie: data});\r\n  };\r\n\r\n  render() {\r\n    const {movie} = this.state;\r\n    return (\r\n        <div className=\"container\">\r\n          {this.state.movie &&\r\n            <div className=\"jumbotron pt-2\">\r\n              <img src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`} alt=\"poster\" className=\"jumbotron__image rounded mx-auto d-block\"/>\r\n              <h1 className=\"display-4 text-center\">{movie.title}</h1>\r\n              <p className=\"lead text-center\">{movie.tagline}</p>\r\n              <p className=\"lead text-center\">Duration:{movie.runtime} min. Release date: {movie.release_date}. Original language: {movie.original_language}</p>\r\n              <hr className=\"my-4\"/>\r\n              <ul className=\"list-group\">\r\n                {movie.genres.map((genre,index) => (\r\n                    <li className=\"list-group-item\" key={index}>{genre.name}</li>\r\n                ))}\r\n              </ul>\r\n              <hr className=\"my-4\"/>\r\n              <p className=\"text\">Description: {movie.overview}</p>\r\n              <ul className=\"list-group list-group-horizontal\">\r\n                {movie.production_companies.map((company) => (\r\n                    <li className=\"list-group-item mb-0 mx-auto\" key={company.id}>{company.name}</li>\r\n                ))}\r\n              </ul>\r\n              <button onClick={this.props.history.goBack} className=\"btn btn-primary btn-lg mt-3\">Return Back</button>\r\n            </div>}\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Movie;","import React from 'react';\r\n\r\nconst Movie = () => {\r\n  return (\r\n      <div>The page doesn't exist!</div>\r\n  )\r\n};\r\n\r\nexport default Movie;","import React from 'react';\r\nimport poster1 from '../img/poster1.png';\r\nimport poster2 from '../img/poster2.jpg';\r\nimport poster3 from '../img/poster3.jpg';\r\n\r\nconst Slider = () => {\r\n  return (\r\n      <div id=\"carouselExampleSlidesOnly\" className=\"carousel slide\" data-ride=\"carousel\" data-interval=\"4000\">\r\n        <div className=\"carousel-inner mx-auto\">\r\n          <div className=\"carousel-item active \">\r\n            <img src={poster1} className=\"d-block w-100\" alt=\"poster1\"/>\r\n          </div>\r\n          <div className=\"carousel-item\">\r\n            <img src={poster2} className=\"d-block w-100\" alt=\"poster2\"/>\r\n          </div>\r\n          <div className=\"carousel-item\">\r\n            <img src={poster3} className=\"d-block w-100\" alt=\"poster3\"/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  )\r\n};\r\n\r\nexport default Slider;\r\n\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Form from \"./Form\";\r\nimport Slider from './Slider';\r\n\r\nclass Welcome extends Component {\r\n  static propTypes = {\r\n    goToSearchPage: PropTypes.func,\r\n  };\r\n\r\n  goToSearchPage = (e) => {\r\n    e.preventDefault();\r\n    const searchFieldValue = e.target.filmName.value;\r\n    this.props.history.push(`/search/${searchFieldValue}/1`);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n        <React.Fragment>\r\n          <Form findMovies={this.goToSearchPage}/>\r\n          <Slider/>\r\n        </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Welcome;","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport App from '../App';\r\nimport Movie from './Movie';\r\nimport NotFound from './NotFound';\r\nimport Welcome from './Welcome';\r\n\r\nconst Router = () => {\r\n  return (\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route exact path='/' component={Welcome}/>\r\n          <Route path='/search/:query/:page' component={App}/>\r\n          <Route path='/movie/:movieId' component={Movie}/>\r\n          <Route component={NotFound}/>\r\n        </Switch>\r\n      </BrowserRouter>\r\n  )\r\n};\r\n\r\nexport default Router;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'jquery';\nimport 'popper.js';\nimport 'bootstrap';\nimport Router from './components/Router';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<Router />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}